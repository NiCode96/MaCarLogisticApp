/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package VistaController;
import Model.Producto;
import Controller.ProductoController;
import Conexion.Conexion;
import java.awt.List;
import java.beans.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import Model.Marca;
import Model.Proveedor;
import Model.MarcaRepuesto;
import Model.TipoProducto;
import javax.swing.JOptionPane;
import Export.ExportarExcel;
import java.io.IOException;

/**

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nicolas
 */
public class VistaIngresos extends javax.swing.JInternalFrame {

    DefaultTableModel model = new DefaultTableModel();
    
    /**
     * Creates new form VistaIngresos
     */
    public VistaIngresos() {
        initComponents();
        model.addColumn("ID Producto");
        model.addColumn("Codigo SKU");
        model.addColumn("Bodega");
        model.addColumn("Nombre Producto");
        model.addColumn("Tipo de Repuestos");
        model.addColumn("Marca Repuesto");
        model.addColumn("Marca Vehiculo");
        model.addColumn("Modelos Compatibles");
        model.addColumn("Cantidad recepcionada");
        model.addColumn("Valor Mayorista");
        model.addColumn("Valor a Publico");
        
        llenarTabla();
        llenarComboBox();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_nombreProducto = new javax.swing.JTextField();
        btn_ingresar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btn_excel = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_productos = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        comboBox_MarcaRepuesto = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txt_modeloCompatible = new javax.swing.JTextField();
        spinner_CantidadRepuesto = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        comboBox_Marca = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        comboBox_TipoProducto = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        combo_productos = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txt_valorProducto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_valorUnitario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_sku = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        comboBox_proveedor = new javax.swing.JComboBox<>();
        btn_seleccionar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel1.setText("GESTION DE INVENTARIO");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel2.setText("Marca Repuesto:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel3.setText("Nombre Producto:");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel4.setText("Marca Vehiculo:");

        btn_ingresar.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        btn_ingresar.setText("INGRESAR");
        btn_ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresarActionPerformed(evt);
            }
        });

        btn_modificar.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        btn_modificar.setText("MODIFICAR");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_excel.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        btn_excel.setText("EXCEL");
        btn_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excelActionPerformed(evt);
            }
        });

        btn_eliminar.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        btn_eliminar.setText("ELIMINAR");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        tbl_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbl_productos);

        comboBox_MarcaRepuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBox_MarcaRepuestoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel8.setText("Modelos Compatibles:");

        txt_modeloCompatible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_modeloCompatibleActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel9.setText("Stock:");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel5.setText("Tipo de Producto:");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel6.setText("ID Producto:");

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel10.setText("Valor Mayorista:");

        txt_valorProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_valorProductoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel11.setText("Valor Minorista:");

        txt_valorUnitario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_valorUnitarioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel7.setText("Codigo SKU:");

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        jLabel12.setText("Bodega:");

        btn_seleccionar.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        btn_seleccionar.setText("SELECCIONAR");
        btn_seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_seleccionarActionPerformed(evt);
            }
        });

        btn_limpiar.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        btn_limpiar.setText("LIMPIAR");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btn_seleccionar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_sku, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_modeloCompatible, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_valorProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_valorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinner_CantidadRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(combo_productos, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(btn_modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(comboBox_Marca, 0, 412, Short.MAX_VALUE)
                                    .addComponent(comboBox_MarcaRepuesto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBox_TipoProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBox_proveedor, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1244, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(29, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(comboBox_TipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox_MarcaRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(txt_sku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_modeloCompatible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(comboBox_Marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_valorProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addComponent(comboBox_proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_valorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(spinner_CantidadRepuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_ingresar)
                            .addComponent(btn_eliminar)
                            .addComponent(btn_excel)
                            .addComponent(btn_limpiar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_productos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(btn_modificar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_seleccionar)
                        .addGap(24, 24, 24)))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void llenarTabla(){
        model.setRowCount(0);
        tbl_productos.setModel(model);
        
        try {
            
            ArrayList <Producto> tablaProductos = Producto.buscarTodasMarcas();
            
            for (Producto productoIndex : tablaProductos) {
                
                Object[] objeto = new Object[11];
                
                objeto[0]= productoIndex.getId_producto();
                objeto[1]= productoIndex.getSku();
                objeto[2]= productoIndex.getBodega();
                objeto[3]= productoIndex.getNombreProducto();
                objeto[4]= productoIndex.getTipoProducto();
                objeto[5]= productoIndex.getMarcaRepuesto();
                objeto[6]= productoIndex.getMarcaVehiculo();
                objeto[7]= productoIndex.getModelosCompatibles();
                objeto[8]= productoIndex.getCantidadRecepcionada();
                objeto[9]= productoIndex.getValor();
                objeto[10]= productoIndex.getValorProducto();
                
                int estado = productoIndex.getProducto_estado();
                
                if (estado != 1) {
                     model.addRow(objeto);
                }
               
                   
                
                
                
                
            }
            
        } catch (Exception e) {
        }
        
        
    }     
    
    
    
    
    public void limpiar(){
    txt_modeloCompatible.setText("");
    txt_nombreProducto.setText("");
    txt_sku.setText("");
    txt_valorProducto.setText("");
    txt_valorUnitario.setText("");
    comboBox_Marca.setSelectedIndex(-1);
    comboBox_MarcaRepuesto.setSelectedIndex(-1);
    comboBox_TipoProducto.setSelectedIndex(-1);
    comboBox_proveedor.setSelectedIndex(-1);
    combo_productos.setSelectedIndex(-1);
    
    
    
    }
    
    
    
    
    public void llenarComboBox(){
    
        try {
            
            combo_productos.removeAllItems();
            comboBox_Marca.removeAllItems();
            comboBox_MarcaRepuesto.removeAllItems();
            comboBox_TipoProducto.removeAllItems();
            comboBox_proveedor.removeAllItems();
            
            ArrayList<Marca> tablaMarca = Marca.buscarTodasMarcas();
            ArrayList<MarcaRepuesto> tablaMarcaRepuestos = MarcaRepuesto.buscarTodasMarcas();
            ArrayList<TipoProducto> tablaTipoProductos = TipoProducto.listarTodos();
            ArrayList<Producto> tablaProductos = Producto.buscarTodasMarcas();
            ArrayList <Proveedor> tablaProveedores = Proveedor.listarProveedores();
            
            
            for (Proveedor provedorIndex : tablaProveedores) {
                int estado = provedorIndex.getEstado_proveedor();
                
                if (estado == 1) {
                    comboBox_proveedor.addItem(provedorIndex.getNombre_proveedor());
                }
            }
            
            
            for (Marca marca : tablaMarca) {
                int estado = marca.getMarca_estado();
                if (estado == 1) {
                    comboBox_Marca.addItem(marca.getNombreMarca());
                }
            }
            
            
            for (TipoProducto TipoProducto : tablaTipoProductos) {
                int estado = TipoProducto.getEstado_tipo();
                if (estado == 1) {
                   comboBox_TipoProducto.addItem(TipoProducto.getTipoNombre()); 
                }
                
            }
            
            
            for (MarcaRepuesto MarcaRepuesto : tablaMarcaRepuestos) {
                int estado = MarcaRepuesto.getEstado_marcaRepuesto();
                if (estado == 1) {
                    
                    comboBox_MarcaRepuesto.addItem(MarcaRepuesto.getNombreMarca());
                }
            }
            
            
         for (Producto producto : tablaProductos) {
             
             int estado = producto.getProducto_estado();
                
                if (estado != 1) {
                     combo_productos.addItem(String.valueOf(producto.getId_producto()));
                }
               
}
            
           
            
        } catch (Exception e) {
        }
        
    
    }
    
    
    
    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        
 int id_producto = Integer.parseInt(combo_productos.getSelectedItem().toString());
    int estadoEliminar = 1; // Estado lógico de eliminación

    try {
        boolean success = Producto.modificarEstadoProducto(estadoEliminar, id_producto);

        if (success) {
            JOptionPane.showMessageDialog(this, "Se ha eliminado el producto: " + combo_productos.getSelectedItem().toString());
            
        } else {
            JOptionPane.showMessageDialog(this, "Error: No se pudo eliminar el producto", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        System.err.println("Error al eliminar el producto: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Ocurrió un error al eliminar el producto", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        
        
        llenarTabla();
        llenarComboBox(); 
        
        
    }//GEN-LAST:event_btn_eliminarActionPerformed

    
 
    private void btn_ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresarActionPerformed
// Obtener los valores de los campos
String nombreProducto = txt_nombreProducto.getText().trim().toUpperCase();
String sku = txt_sku.getText().trim().toUpperCase();
String tipodeProducto = comboBox_TipoProducto.getSelectedItem().toString();
String marcaRepuesto = comboBox_MarcaRepuesto.getSelectedItem().toString();
String marcaVehiculo = comboBox_Marca.getSelectedItem().toString();
String modelosCompatibles = txt_modeloCompatible.getText().trim().toUpperCase();
String Bodega = comboBox_proveedor.getSelectedItem().toString();
int Cantidadrecepcionada = (int) spinner_CantidadRepuesto.getValue();

// Validar campos vacíos
if (nombreProducto.isEmpty() || sku.isEmpty() || tipodeProducto.isEmpty() || marcaRepuesto.isEmpty() || 
    marcaVehiculo.isEmpty() || modelosCompatibles.isEmpty() || Bodega.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Todos los campos deben estar completos.", "Campos Vacíos", JOptionPane.WARNING_MESSAGE);
    return;  // Salir del método si hay campos vacíos
}

int valorCliente = 0;
int valorUnitario = 0;

// Validar que los precios sean numéricos
try {
    valorCliente = Integer.parseInt(txt_valorProducto.getText().trim());
    valorUnitario = Integer.parseInt(txt_valorUnitario.getText().trim());
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Asegúrate de que los precios sean solo números.", "Error en Precios", JOptionPane.ERROR_MESSAGE);
    return;  // Salir del método si los precios no son numéricos
}

// Continuar con la asignación de IDs
int id_marca = Producto.VerificacionAsignacion_idMarca(marcaVehiculo);
int id_marcaRepuesto = Producto.VerificacionAsignacion_idMarcaRepuestos(marcaRepuesto);
int id_tipo = Producto.VerificacionAsignacion_idTipo(tipodeProducto);

try {
    // Intentar ingresar el producto
    boolean success = Producto.ingresoProducto(nombreProducto, sku, tipodeProducto, marcaRepuesto, marcaVehiculo, 
                                               modelosCompatibles, Bodega, Cantidadrecepcionada, 
                                               id_marca, id_marcaRepuesto, id_tipo, valorCliente, valorUnitario);
    
    if (success) {
        JOptionPane.showMessageDialog(this, "Producto agregado exitosamente.");
    } else {
        JOptionPane.showMessageDialog(this, "No fue posible agregar el producto. Error en VistaController.");
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Ocurrió un error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

// Actualizar la tabla y limpiar los campos
llenarTabla();
llenarComboBox();
limpiar();


    }//GEN-LAST:event_btn_ingresarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        
        
        String nombreProducto = txt_nombreProducto.getText().trim();
        String sku = txt_sku.getText().trim();
        String tipodeProducto = comboBox_TipoProducto.getSelectedItem().toString();
        String marcaRepuesto = comboBox_MarcaRepuesto.getSelectedItem().toString();
        String marcaVehiculo = comboBox_Marca.getSelectedItem().toString();
        String modelosCompatibles = txt_modeloCompatible.getText().trim();
         String Bodega = comboBox_proveedor.getSelectedItem().toString();
        int Cantidadrecepcionada = (int) spinner_CantidadRepuesto.getValue();
        int id_marca = Producto.VerificacionAsignacion_idMarca(marcaVehiculo);
        int id_marcaRepuesto = Producto.VerificacionAsignacion_idMarcaRepuestos(marcaRepuesto);
        int id_tipo = Producto.VerificacionAsignacion_idTipo(tipodeProducto);
        int valorCliente = Integer.parseInt(txt_valorProducto.getText().trim());
        int valorUnitario = Integer.parseInt(txt_valorUnitario.getText().trim());
        int id_producto = Integer.parseInt(combo_productos.getSelectedItem().toString());
        
        
        
        try {
            ProductoController PC = new ProductoController();
            
            boolean sucess = PC.modificarProducto(
                    nombreProducto, 
                    sku, 
                    tipodeProducto, 
                    marcaRepuesto, 
                    marcaVehiculo, 
                    modelosCompatibles, 
                    Cantidadrecepcionada, 
                    Bodega, 
                    id_marca, 
                    id_marcaRepuesto, 
                    id_tipo, 
                    valorCliente, 
                    valorUnitario, 
                    id_producto);
            
            if (sucess) {
                
                JOptionPane.showMessageDialog(this, "Modificacion del producto realizada con exito");
                
            }
            
        } catch (Exception e) {
        }
   
        
     




        
llenarTabla();
llenarComboBox();

        
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excelActionPerformed
        
        ExportarExcel obj;

try {
    obj = new ExportarExcel();
    obj.exportarExcel(tbl_productos);
} catch (IOException ex) {
    System.out.println("Error: " + ex);
}
        
        
    }//GEN-LAST:event_btn_excelActionPerformed

    
    
    
    
    
    private void txt_modeloCompatibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_modeloCompatibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_modeloCompatibleActionPerformed

    private void txt_valorProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_valorProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_valorProductoActionPerformed

    private void txt_valorUnitarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_valorUnitarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_valorUnitarioActionPerformed

    private void comboBox_MarcaRepuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBox_MarcaRepuestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBox_MarcaRepuestoActionPerformed

    private void btn_seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_seleccionarActionPerformed


        try {
            int id_seleccionado = Integer.parseInt(combo_productos.getSelectedItem().toString());
            ArrayList<Producto> tablaProductos = Producto.buscarTodasMarcas();
            
            for (Producto productoIndex : tablaProductos) {
                int id_producto = productoIndex.getId_producto();
                if (id_seleccionado == id_producto) {
                    txt_modeloCompatible.setText(productoIndex.getModelosCompatibles());
                    txt_nombreProducto.setText(productoIndex.getNombreProducto());
                    txt_sku.setText(productoIndex.getSku());
                    txt_valorProducto.setText(String.valueOf(productoIndex.getValor()));
                    txt_valorUnitario.setText(String.valueOf(productoIndex.getValorProducto()));
                    spinner_CantidadRepuesto.setValue(productoIndex.getCantidadRecepcionada());
                    comboBox_Marca.setSelectedItem(productoIndex.getMarcaRepuesto());
                    comboBox_TipoProducto.setSelectedItem(productoIndex.getTipoProducto());
                    comboBox_proveedor.setSelectedItem(productoIndex.getBodega());
                    comboBox_MarcaRepuesto.setSelectedItem(productoIndex.getMarcaRepuesto());
                    
                    
                }
                
            }
        } catch (Exception e) {
        }








        // TODO add your handling code here:
    }//GEN-LAST:event_btn_seleccionarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed


                    txt_modeloCompatible.setText("");
                    txt_nombreProducto.setText("");
                    txt_sku.setText("");
                    txt_valorProducto.setText("");
                    txt_valorUnitario.setText("");
                    spinner_CantidadRepuesto.setValue(0);
    

       
    }//GEN-LAST:event_btn_limpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_excel;
    private javax.swing.JButton btn_ingresar;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JButton btn_seleccionar;
    private javax.swing.JComboBox<String> comboBox_Marca;
    private javax.swing.JComboBox<String> comboBox_MarcaRepuesto;
    private javax.swing.JComboBox<String> comboBox_TipoProducto;
    private javax.swing.JComboBox<String> comboBox_proveedor;
    private javax.swing.JComboBox<String> combo_productos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner spinner_CantidadRepuesto;
    private javax.swing.JTable tbl_productos;
    private javax.swing.JTextField txt_modeloCompatible;
    private javax.swing.JTextField txt_nombreProducto;
    private javax.swing.JTextField txt_sku;
    private javax.swing.JTextField txt_valorProducto;
    private javax.swing.JTextField txt_valorUnitario;
    // End of variables declaration//GEN-END:variables
}
